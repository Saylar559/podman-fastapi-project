from typing import List, Optional, Tuple
from fastapi import APIRouter, UploadFile, File, Form, HTTPException
import io
import logging

from app.services.excel_utils import analyze_excel_files

router = APIRouter()
logger = logging.getLogger(__name__)


@router.get("/ping-excel")
async def ping_excel():
    """
    –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç.
    GET /api/ping-excel –≤–µ—Ä–Ω—ë—Ç {"ok": true}, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —Ä–æ—É—Ç–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω.
    """
    return {"ok": True}


@router.post(
    "/analyze-excel",
    summary="–ê–Ω–∞–ª–∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö Excel-—Ñ–∞–π–ª–æ–≤",
    description=(
        "–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–≤–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏:\n"
        "- results: –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—É–º–º—ã –ø–æ –æ–±—ä–µ–∫—Ç–∞–º\n"
        "- errors: —Å–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫ –¥–ª—è –ª–∏—Å—Ç–æ–≤, –≥–¥–µ –Ω–µ –Ω–∞—à—ë–ª—Å—è —Å—Ç–æ–ª–±–µ—Ü –∏–ª–∏ —É–ø–∞–ª–æ —á—Ç–µ–Ω–∏–µ"
    )
)
async def analyze_excel(
    files: List[UploadFile] = File(...),
    filter_by_period: str = Form("false"),
    exclude_negative: str = Form("true"),
    year: Optional[int] = Form(None),
    month: Optional[int] = Form(None),
):
    # 1) –ü—Ä–∏–≤–æ–¥–∏–º —Å—Ç—Ä–æ–∫–∏ "true"/"false" –∫ bool
    filter_by_period_bool = filter_by_period.lower() == "true"
    exclude_negative_bool = exclude_negative.lower() == "true"

    # 2) –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–µ —Ñ–∞–π–ª—ã –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    logger.info("üì• –§–∞–π–ª—ã: %s", [f.filename for f in files])
    logger.info(
        "‚öô –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: filter_by_period=%s, exclude_negative=%s, year=%s, month=%s",
        filter_by_period_bool,
        exclude_negative_bool,
        year,
        month,
    )

    # 3) –ß–∏—Ç–∞–µ–º UploadFile –≤ BytesIO –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è
    excel_buffers: List[Tuple[str, io.BytesIO]] = []
    for f in files:
        content = await f.read()
        buf = io.BytesIO(content)
        excel_buffers.append((f.filename, buf))

    # 4) –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∏ –ª–æ–≤–∏–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è
    try:
        result_df, error_df = analyze_excel_files(
            excel_files=excel_buffers,       # —Ç–µ–ø–µ—Ä—å —Å–ø–∏—Å–æ–∫ (filename, buffer)
            year=year,
            month=month,
            filter_by_period=filter_by_period_bool,
            exclude_negative=exclude_negative_bool,
        )
    except Exception:
        logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ Excel", exc_info=True)
        raise HTTPException(
            status_code=500,
            detail="–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ Excel-—Ñ–∞–π–ª–æ–≤. –°–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞."
        )

    # 5) –í–æ–∑–≤—Ä–∞—â–∞–µ–º JSON —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∏ –æ—à–∏–±–∫–∞–º–∏
    return {
        "results": result_df.to_dict(orient="records"),
        "errors": error_df.to_dict(orient="records"),
    }
